// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ----- Models -----

// User Model
model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  username  String?
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  products  Product[]
  imports   ImportBatch[]
}

// Product Model
model Product {
  id          Int        @id @default(autoincrement())

  productCode String     @unique

  name        String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  uploadedBy  Int?
  user        User?      @relation(fields: [uploadedBy], references: [id], onDelete: SetNull)

  facts       DailyFact[]

  @@index([uploadedBy])
  @@index([name])
}

// DailyFact Model
model DailyFact {
  id           Int       @id @default(autoincrement())

  productIdRef Int
  product      Product   @relation(fields: [productIdRef], references: [id], onDelete: Cascade)

  date         DateTime

  openingInventory  Int?

  procurementQty    Int        @default(0)
  procurementPrice  Decimal?   @db.Decimal(12,2)
  salesQty          Int        @default(0)
  salesPrice        Decimal?   @db.Decimal(12,2)

  procurementAmount Decimal?   @db.Decimal(14,2)
  salesAmount       Decimal?   @db.Decimal(14,2)

  importBatchId Int?
  importBatch   ImportBatch? @relation(fields: [importBatchId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([productIdRef, date])

  @@index([productIdRef, date])
  @@index([date])
}

// ImportBatch Model
model ImportBatch {
  id        Int      @id @default(autoincrement())
  filename  String
  createdAt DateTime @default(now())

  userId Int?
  user   User?   @relation(fields: [userId], references: [id], onDelete: SetNull)

  facts  DailyFact[]

  @@index([userId])
  @@index([createdAt])
}
